//////////////////////////////////////////////////////////////////////
///////////////////////////// FUNCTIONS //////////////////////////////
//////////////////////////////////////////////////////////////////////

// Shortcut for rgba() with a percentage-based $opacity
@function fade($color, $opacity) {
  @return rgba($color, $opacity / 100);
}

// Generate a grey on a lightness-scale from 0 to 100
@function grey($lightness) {
  @return lighten(black, $lightness);
}

//////////////////////////////////////////////////////////////////////
////////////////////////////// MIXINS ////////////////////////////////
//////////////////////////////////////////////////////////////////////

// CSS3 ------------------------------------------------------------ /

// Changes the current selection color
@mixin selection-color($background, $color: white) {
  @include selection {
    background: $background;
    color: $color;
  }
}

// Add basic Webkit-only reflect
@mixin reflect {
  -webkit-box-reflect: below 0 -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(50%, transparent), to(fade(white, 20)));
}

// Changes the current font-smoothing mode
@mixin font-smoothing($smooth) {
  @include experimental(font-smoothing, $smooth);
}

// Firefox-like "double shadow"
@function double-shadow($size: 2px, $blur: 0) {
  @return 0 $size $blur fade(black, 10), inset 0 -$size $blur fade(black, 20);
}

// Firefox-like "double shadow"
@mixin double-shadow($size: 2px, $blur: 0) {
  @include box-shadow(double-shadow($size, $blur));
}

// Gradients ------------------------------------------------------- /

// Main mixin
@mixin gradient-auto($color, $difference: $cerberus-gradient-span, $type: vertical, $borders: $cerberus-gradient-borders) {
  @if $type == vertical {
    @include gradient-vertical(lighten($color, $difference), darken($color, $difference));
  }
  @else if $type == vertical-inverse {
    @include gradient-vertical(darken($color, $difference), lighten($color, $difference));
  }
  @else if $type == horizontal {
    @include gradient-horizontal(lighten($color, $difference), darken($color, $difference));
  }
  @else if $type == horizontal-inverse {
    @include gradient-horizontal(darken($color, $difference), lighten($color, $difference));
  }
  @else if $type == radial {
    @include gradient-radial(lighten($color, $difference), darken($color, $difference));
  }
  // Borders
  @if $borders > 0 {
    border-top: $borders solid lighten($color, $difference + 10);
    border-bottom: $borders solid darken($color, $difference + 10);
  }
}

// Individual directional mixins
@mixin gradient-auto-vertical($color, $difference: $cerberus-gradient-span, $borders: $cerberus-gradient-borders) {
  @include gradient-auto($color, $difference, vertical, $borders);
}

@mixin gradient-auto-horizontal($color, $difference: $cerberus-gradient-span, $borders: $cerberus-gradient-borders) {
  @include gradient-auto($color, $difference, horizontal, $borders);
}

@mixin gradient-auto-radial($color, $difference: $cerberus-gradient-span, $borders: $cerberus-gradient-borders) {
  @include gradient-auto($color, $difference, radial, $borders);
}

// Utilities ------------------------------------------------------- /

@mixin debug($main-block) {
  body {
    @include baseline-grid-background($base-line-height);
  }
  #{$main-block} {
    @include grid-background(
      $total-columns,
      $column-width,
      $gutter-width,
      $base-line-height,
      $grid-padding,
      $force_fluid: true
    );
  }
}

// Transforms a table into a responsive table
@mixin responsive-table($data-title: true) {
  thead, tbody, th, tr, td {
    display: block;
    width: 100%;
  }
  @if $data-title {
    thead {
      display: none;
    }
    td:before {
      position: absolute;
      top: 3px;
      left: 10px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      text-align: left;
      font-weight: 700;
      content: attr(data-title);
    }
  }
  th, td, td.id, td.action {
    padding: ms(-2) 0;
    @if $data-title {
      width: 50%;
      position: relative;
      padding-left: 50%;
      text-align: left;
    }
    @else {
      width: 100%;
    }
  }
}

//////////////////////////////////////////////////////////////////////
///////////////////////// TWITTER BOOTSTRAP //////////////////////////
//////////////////////////////////////////////////////////////////////

@mixin input-shadow($color) {
  textarea,
  input[type="text"],
  input[type="password"],
  input[type="datetime"],
  input[type="date"],
  input[type="time"],
  input[type="number"],
  input[type="email"],
  input[type="url"],
  input[type="search"],
  input[type="color"],
  .uneditable-input {
    &:focus {
      border-color: rgba($color, 0.8);
      @include box-shadow(inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba($color, 0.6));
    }
  }
}
